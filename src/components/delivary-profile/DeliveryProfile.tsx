import React, { useState } from "react";
import styles from "./DeliveryProfile.module.scss";
import CustomCheckbox from "../custom-checkBox/CustomCheckbox";

interface Address {
  id: number;
  type: string;
  city: string;
  street: string;
  comment?: string;
}

const DeliveryProfile = () => {
  const [addresses, setAddresses] = useState<Address[]>([
    {
      id: 1,
      type: "–ü—É–Ω–∫—Ç –°–î–≠–ö",
      city: "–≥. –°—É–∑–¥–∞–ª—å",
      street: "—É–ª. –õ–µ–Ω–∏–Ω–∞, 138/2",
    },
    {
      id: 2,
      type: "–ü—É–Ω–∫—Ç –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏",
      city: "–≥. –ú–æ—Å–∫–≤–∞",
      street: "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 162 –∫. 5",
    },
    {
      id: 3,
      type: "–ö—É—Ä—å–µ—Ä–æ–º –ø–æ –∞–¥—Ä–µ—Å—É",
      city: "–≥. –°—É–∑–¥–∞–ª—å",
      street: "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 10 –∫–≤. 15",
      comment: "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –∑–ª–∞—è —Å–æ–±–∞–∫–∞!",
    },
  ]);

  const [selectedId, setSelectedId] = useState<number>(1);

  const handleAddAddress = () => {
    const newId = addresses.length + 1;
    const newAddress: Address = {
      id: newId,
      type: `–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å ${newId}`,
      city: "–≥. –ù–æ–≤—ã–π –≥–æ—Ä–æ–¥",
      street: "—É–ª. –ù–æ–≤–∞—è, 1",
    };
    setAddresses([...addresses, newAddress]);
    setSelectedId(newId);
  };

  return (
    <div className={styles.deliveryProfile}>
      <article className={styles.headerWrapper}>
        <h2 className={styles.title}>–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
        <p className={styles.addAddress} onClick={handleAddAddress}>
          + –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å
        </p>
      </article>
      {/* üëà —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä */}
      <ul className={styles.list}>
        {addresses.map((address, index) => (
          <li key={address.id} className={styles.item}>
            <label className={styles.label}>
              <CustomCheckbox
                checked={selectedId === address.id}
                onChange={() => setSelectedId(address.id)}
                borderRadius={50}
              />
              <div className={styles.info}>
                <div>
                  <p className={styles.type}>{address.type}</p>
                  <p className={styles.address}>
                    {address.city}, {address.street}
                  </p>
                  {address.comment && (
                    <p className={styles.comment}>
                      –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π : <span>{address.comment}</span>
                    </p>
                  )}
                </div>

                {selectedId === address.id && index === 0 && (
                  <p className={styles.defaultAddress}>–∞–¥—Ä–µ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</p>
                )}
              </div>
            </label>
            <button className={styles.more}>‚ãØ</button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default DeliveryProfile;
